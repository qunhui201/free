name: Run Node Extractor

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'py/script.py'                 # 忽略脚本本身的改动（避免频繁触发）
      - '.github/workflows/run-script.yml'
      - 'test/working_nodes.txt'       # 忽略输出文件的改动
  schedule:
    - cron: '0 0 * * *'                # 每天 UTC 午夜运行（JST 09:00）
  workflow_dispatch:                   # 手动触发

jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml pysocks
        env:
          PYTHONUNBUFFERED: 1

      - name: 安装 V2Ray
        run: |
          wget -q https://github.com/v2fly/v2ray-core/releases/latest/download/v2ray-linux-64.zip
          unzip v2ray-linux-64.zip -d /usr/local/bin
          chmod +x /usr/local/bin/v2ray
        env:
          PYTHONUNBUFFERED: 1

      - name: 运行节点提取脚本
        run: python py/script.py
        env:
          PYTHONUNBUFFERED: 1
          USE_HTTP_TEST: false   # 默认使用端口测试，设为 true 可以启用 HTTP 测试（需要 v2ray 可用）

      - name: 验证输出文件
        if: success()
        run: |
          echo "Checking test/working_nodes.txt"
          if [ -f test/working_nodes.txt ]; then
            echo "File exists. Number of nodes: $(wc -l < test/working_nodes.txt)"
            head -n 5 test/working_nodes.txt
          else
            echo "Error: test/working_nodes.txt not found"
            exit 1
          fi

      - name: 提交文件到仓库
        if: success() && github.event_name != 'pull_request'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add test/working_nodes.txt
          git commit -m "Update working nodes file" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 上传结果作为 artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: working-nodes
          path: test/working_nodes.txt
          retention-days: 7

      - name: 失败时通知
        if: failure()
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            try {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '节点提取脚本失败',
                body: '节点提取脚本运行失败，请检查日志。'
              });
            } catch (error) {
              console.log('无法创建 issue，可能未启用 Issues 功能: ', error);
            }

      - name: 失败时存档日志
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-logs
          path: test/working_nodes.txt
          retention-days: 3
