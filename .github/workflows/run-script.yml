name: Run Node Extractor

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'test/script.py'  # 忽略对 script.py 的更改
      - '.github/workflows/run-script.yml'  # 忽略对工作流文件的更改
      - 'test/working_nodes.txt'  # 忽略对输出文件的更改
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 午夜运行（JST 09:00）
  workflow_dispatch:  # 支持手动触发

jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
    - name: 检出仓库代码
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # 确保有权限推送

    - name: 设置 Python 环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install requests pyyaml
      env:
        PYTHONUNBUFFERED: 1  # 确保实时日志输出

    - name: 安装 V2Ray
      run: |
        wget -q https://github.com/v2fly/v2ray-core/releases/latest/download/v2ray-linux-64.zip
        unzip v2ray-linux-64.zip -d /usr/local/bin
        chmod +x /usr/local/bin/v2ray
      env:
        PYTHONUNBUFFERED: 1  # 确保实时日志输出

    - name: 运行节点提取脚本
      run: python test/script.py
      env:
        PYTHONUNBUFFERED: 1  # 确保实时日志输出
        USE_PORT_TEST: false  # 设置为 true 以使用端口测试

    - name: 验证输出文件
      if: success()  # 仅在脚本成功运行时验证
      run: |
        echo "Checking test/working_nodes.txt"
        if [ -f test/working_nodes.txt ]; then
          echo "File exists. Number of nodes: $(wc -l < test/working_nodes.txt)"
          head -n 5 test/working_nodes.txt  # 显示前 5 行以验证格式
        else
          echo "Error: test/working_nodes.txt not found"
          exit 1
        fi

    - name: 提交文件到仓库
      if: success() && github.event_name != 'pull_request'  # 避免在 PR 中提交
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git add test/working_nodes.txt
        git commit -m "Update working nodes file"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 上传结果作为 artifact
      if: success()  # 仅在脚本成功运行时上传
      uses: actions/upload-artifact@v4
      with:
        name: working-nodes
        path: test/working_nodes.txt
        retention-days: 7  # 保留 7 天

    - name: 失败时通知
      if: failure()
      uses: actions/github-script@v6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          try {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '节点提取脚本失败',
              body: '节点提取脚本运行失败，请检查日志。'
            });
          } catch (error) {
            console.log('无法创建 issue，可能未启用 Issues 功能: ', error);
          }

    - name: 失败时存档日志
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: error-logs
        path: test/working_nodes.txt
        retention-days: 3  # 保留 3 天
